name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build Docker image (no push yet)
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: false
          tags: dicksonml/student-perf-app:latest

      # 5. Run container for testing
      - name: Start container for testing
        run: |
          docker rm -f test_student_api || true
          docker run -d --name test_student_api -p 8000:5000 dicksonml/student-perf-app:latest
          sleep 10  # wait for API to start

      # 6. Run tests inside container
      - name: Run tests
        run: docker exec test_student_api pytest tests/ --disable-warnings -q

      # 7. Show container logs on failure
      - name: Show container logs on failure
        if: failure()
        run: docker logs test_student_api || true

      # 8. Stop container
      - name: Stop container
        if: always()
        run: docker stop test_student_api || true

      # 9. Push image (only if everything passed)
      - name: Push to DockerHub
        if: success()
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: dicksonml/student-perf-app:latest
